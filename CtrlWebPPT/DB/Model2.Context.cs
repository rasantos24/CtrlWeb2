//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CtrlWebPPT.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Ctrl_TestEntities : DbContext
    {
        public Ctrl_TestEntities()
            : base("name=Ctrl_TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<apConfig> apConfig { get; set; }
        public virtual DbSet<apFormaPago> apFormaPago { get; set; }
        public virtual DbSet<apProveedores> apProveedores { get; set; }
        public virtual DbSet<apProveedoresContactos> apProveedoresContactos { get; set; }
        public virtual DbSet<apProveedoresTipo> apProveedoresTipo { get; set; }
        public virtual DbSet<arClientes> arClientes { get; set; }
        public virtual DbSet<arClientesClase> arClientesClase { get; set; }
        public virtual DbSet<arClientesContactos> arClientesContactos { get; set; }
        public virtual DbSet<arClientesDocumentos> arClientesDocumentos { get; set; }
        public virtual DbSet<arClientesTipo> arClientesTipo { get; set; }
        public virtual DbSet<arConfig> arConfig { get; set; }
        public virtual DbSet<arCreditos> arCreditos { get; set; }
        public virtual DbSet<arCreditosDetalle> arCreditosDetalle { get; set; }
        public virtual DbSet<arDebitos> arDebitos { get; set; }
        public virtual DbSet<arDescuentos> arDescuentos { get; set; }
        public virtual DbSet<arFacturas> arFacturas { get; set; }
        public virtual DbSet<arFacturasDescuento> arFacturasDescuento { get; set; }
        public virtual DbSet<arFacturasDetalle> arFacturasDetalle { get; set; }
        public virtual DbSet<arFacturasTax> arFacturasTax { get; set; }
        public virtual DbSet<arMetodoPago> arMetodoPago { get; set; }
        public virtual DbSet<arNotaCreditoTipo> arNotaCreditoTipo { get; set; }
        public virtual DbSet<arNotaDebitoTipo> arNotaDebitoTipo { get; set; }
        public virtual DbSet<arRecibos> arRecibos { get; set; }
        public virtual DbSet<arRecibosDetalle> arRecibosDetalle { get; set; }
        public virtual DbSet<arRecibosMetodos> arRecibosMetodos { get; set; }
        public virtual DbSet<arServicioClase> arServicioClase { get; set; }
        public virtual DbSet<arServicios> arServicios { get; set; }
        public virtual DbSet<arServicioTipo> arServicioTipo { get; set; }
        public virtual DbSet<arTerminoCredito> arTerminoCredito { get; set; }
        public virtual DbSet<bnBancos> bnBancos { get; set; }
        public virtual DbSet<bnConfig> bnConfig { get; set; }
        public virtual DbSet<bnMonedas> bnMonedas { get; set; }
        public virtual DbSet<gcCodigosDeduccion> gcCodigosDeduccion { get; set; }
        public virtual DbSet<gcConfig> gcConfig { get; set; }
        public virtual DbSet<gcOrdenPago> gcOrdenPago { get; set; }
        public virtual DbSet<gcOrdenPagoDed> gcOrdenPagoDed { get; set; }
        public virtual DbSet<gcPrestamos> gcPrestamos { get; set; }
        public virtual DbSet<gcPrestamosAmor> gcPrestamosAmor { get; set; }
        public virtual DbSet<gcPrestamosAmorMov> gcPrestamosAmorMov { get; set; }
        public virtual DbSet<gcPrestamosAmorMovDet> gcPrestamosAmorMovDet { get; set; }
        public virtual DbSet<gcPrestamosAvales> gcPrestamosAvales { get; set; }
        public virtual DbSet<gcPrestamosDoc> gcPrestamosDoc { get; set; }
        public virtual DbSet<gcPrestamosGar> gcPrestamosGar { get; set; }
        public virtual DbSet<gcPrestamosRefCom> gcPrestamosRefCom { get; set; }
        public virtual DbSet<gcPrestamosRefFin> gcPrestamosRefFin { get; set; }
        public virtual DbSet<gcPrestamosRefPer> gcPrestamosRefPer { get; set; }
        public virtual DbSet<gcPrestamosReq> gcPrestamosReq { get; set; }
        public virtual DbSet<gcPrestamosTipo> gcPrestamosTipo { get; set; }
        public virtual DbSet<gcPrestamosTipoDoc> gcPrestamosTipoDoc { get; set; }
        public virtual DbSet<gcPrestamosTipoReq> gcPrestamosTipoReq { get; set; }
        public virtual DbSet<gcRequisitosPrestamos> gcRequisitosPrestamos { get; set; }
        public virtual DbSet<gcTiposGarantia> gcTiposGarantia { get; set; }
        public virtual DbSet<glCuentas> glCuentas { get; set; }
        public virtual DbSet<glCuentasCategoria> glCuentasCategoria { get; set; }
        public virtual DbSet<glCuentasGrupo> glCuentasGrupo { get; set; }
        public virtual DbSet<glCuentasSubGrupo> glCuentasSubGrupo { get; set; }
        public virtual DbSet<icAjusteClase> icAjusteClase { get; set; }
        public virtual DbSet<icAjustes> icAjustes { get; set; }
        public virtual DbSet<icAjustesDetalle> icAjustesDetalle { get; set; }
        public virtual DbSet<icAlmacenes> icAlmacenes { get; set; }
        public virtual DbSet<icBines> icBines { get; set; }
        public virtual DbSet<icClasificacion> icClasificacion { get; set; }
        public virtual DbSet<icConfig> icConfig { get; set; }
        public virtual DbSet<icDeptos> icDeptos { get; set; }
        public virtual DbSet<icFabricante> icFabricante { get; set; }
        public virtual DbSet<icGrupo> icGrupo { get; set; }
        public virtual DbSet<icInventarioFisico> icInventarioFisico { get; set; }
        public virtual DbSet<icInventarioFisicoDetalle> icInventarioFisicoDetalle { get; set; }
        public virtual DbSet<icLinea> icLinea { get; set; }
        public virtual DbSet<icMiscelaneo> icMiscelaneo { get; set; }
        public virtual DbSet<icPresentacion> icPresentacion { get; set; }
        public virtual DbSet<icProductos> icProductos { get; set; }
        public virtual DbSet<icProductosBitacora> icProductosBitacora { get; set; }
        public virtual DbSet<icProductosEspMiscelaneo> icProductosEspMiscelaneo { get; set; }
        public virtual DbSet<icProductosInventario> icProductosInventario { get; set; }
        public virtual DbSet<icRecepciones> icRecepciones { get; set; }
        public virtual DbSet<icRecepcionesDetalle> icRecepcionesDetalle { get; set; }
        public virtual DbSet<icRequisicionClase> icRequisicionClase { get; set; }
        public virtual DbSet<icRequisicionesSalida> icRequisicionesSalida { get; set; }
        public virtual DbSet<icRequisicionesSalidaDetalle> icRequisicionesSalidaDetalle { get; set; }
        public virtual DbSet<icRequisicionesTransf> icRequisicionesTransf { get; set; }
        public virtual DbSet<icRequisicionesTransfDetalle> icRequisicionesTransfDetalle { get; set; }
        public virtual DbSet<icTipoInventario> icTipoInventario { get; set; }
        public virtual DbSet<icTipoInventarioCtasCostos> icTipoInventarioCtasCostos { get; set; }
        public virtual DbSet<icTipoInventarioCtasIngresos> icTipoInventarioCtasIngresos { get; set; }
        public virtual DbSet<icTipoMiscelaneo> icTipoMiscelaneo { get; set; }
        public virtual DbSet<icUnidadMedida> icUnidadMedida { get; set; }
        public virtual DbSet<posCategorias> posCategorias { get; set; }
        public virtual DbSet<posCategoriasModi> posCategoriasModi { get; set; }
        public virtual DbSet<posCategoriasProductos> posCategoriasProductos { get; set; }
        public virtual DbSet<posConfig> posConfig { get; set; }
        public virtual DbSet<posOrdenes> posOrdenes { get; set; }
        public virtual DbSet<posOrdenesDetalle> posOrdenesDetalle { get; set; }
        public virtual DbSet<posTurnos> posTurnos { get; set; }
        public virtual DbSet<posTurnosTabla> posTurnosTabla { get; set; }
        public virtual DbSet<posVendedores> posVendedores { get; set; }
        public virtual DbSet<SysCAI> SysCAI { get; set; }
        public virtual DbSet<SysCAITerminales> SysCAITerminales { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<SysRutaProcesos> SysRutaProcesos { get; set; }
        public virtual DbSet<SysRutaProcesosDet> SysRutaProcesosDet { get; set; }
        public virtual DbSet<SysRutaProcesosWF> SysRutaProcesosWF { get; set; }
        public virtual DbSet<SysSucursales> SysSucursales { get; set; }
        public virtual DbSet<SysTaxes> SysTaxes { get; set; }
        public virtual DbSet<SysTerminales> SysTerminales { get; set; }
        public virtual DbSet<SysTiposDocumentos> SysTiposDocumentos { get; set; }
        public virtual DbSet<viewDeptosCuentasCostos> viewDeptosCuentasCostos { get; set; }
        public virtual DbSet<viewDeptosCuentasIngresos> viewDeptosCuentasIngresos { get; set; }
        public virtual DbSet<viewMiscelaneo> viewMiscelaneo { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_arFacturaTax(Nullable<int> noFactura)
        {
            var noFacturaParameter = noFactura.HasValue ?
                new ObjectParameter("NoFactura", noFactura) :
                new ObjectParameter("NoFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_arFacturaTax", noFacturaParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
